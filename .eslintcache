[{"/Users/imane/Desktop/GITHUB/workshop-react/src/index.js":"1","/Users/imane/Desktop/GITHUB/workshop-react/src/serviceWorker.js":"2","/Users/imane/Desktop/GITHUB/workshop-react/src/App.js":"3","/Users/imane/Desktop/GITHUB/workshop-react/src/routes.js":"4","/Users/imane/Desktop/GITHUB/workshop-react/src/components/nav/nav.js":"5","/Users/imane/Desktop/GITHUB/workshop-react/src/pages/results/results.js":"6","/Users/imane/Desktop/GITHUB/workshop-react/src/pages/profile/profile.js":"7","/Users/imane/Desktop/GITHUB/workshop-react/src/pages/Homepage/homepage.js":"8","/Users/imane/Desktop/GITHUB/workshop-react/src/components/nav/subMenu.js":"9","/Users/imane/Desktop/GITHUB/workshop-react/src/components/cards/cards.js":"10","/Users/imane/Desktop/GITHUB/workshop-react/src/components/footer/footer.js":"11","/Users/imane/Desktop/GITHUB/workshop-react/src/components/splashScreen/splashScreen.js":"12","/Users/imane/Desktop/GITHUB/workshop-react/src/components/header/header.js":"13","/Users/imane/Desktop/GITHUB/workshop-react/src/components/workshopContent/content.js":"14","/Users/imane/Desktop/GITHUB/workshop-react/src/components/formInput/formInput.js":"15"},{"size":547,"mtime":1610111415089,"results":"16","hashOfConfig":"17"},{"size":5086,"mtime":1610111415092,"results":"18","hashOfConfig":"17"},{"size":243,"mtime":1610111415077,"results":"19","hashOfConfig":"17"},{"size":651,"mtime":1610111415092,"results":"20","hashOfConfig":"17"},{"size":3594,"mtime":1610111415085,"results":"21","hashOfConfig":"17"},{"size":210,"mtime":1610111415091,"results":"22","hashOfConfig":"17"},{"size":3679,"mtime":1610111415090,"results":"23","hashOfConfig":"17"},{"size":376,"mtime":1610111415090,"results":"24","hashOfConfig":"17"},{"size":1754,"mtime":1610111415085,"results":"25","hashOfConfig":"17"},{"size":1283,"mtime":1610111415082,"results":"26","hashOfConfig":"17"},{"size":342,"mtime":1610111415083,"results":"27","hashOfConfig":"17"},{"size":611,"mtime":1610111415087,"results":"28","hashOfConfig":"17"},{"size":1030,"mtime":1610111415084,"results":"29","hashOfConfig":"17"},{"size":10846,"mtime":1610111415089,"results":"30","hashOfConfig":"17"},{"size":756,"mtime":1610111415083,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1pez9uu",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/imane/Desktop/GITHUB/workshop-react/src/index.js",[],["65","66"],"/Users/imane/Desktop/GITHUB/workshop-react/src/serviceWorker.js",[],"/Users/imane/Desktop/GITHUB/workshop-react/src/App.js",[],"/Users/imane/Desktop/GITHUB/workshop-react/src/routes.js",[],"/Users/imane/Desktop/GITHUB/workshop-react/src/components/nav/nav.js",[],"/Users/imane/Desktop/GITHUB/workshop-react/src/pages/results/results.js",[],"/Users/imane/Desktop/GITHUB/workshop-react/src/pages/profile/profile.js",["67","68"],"import React, {useEffect, useState} from 'react';\nimport { useHistory,useParams, } from \"react-router-dom\";\nimport axios from 'axios';\nimport Card from \"../../components/cards/cards\";\nimport './profile.scss';\nimport Footer from \"../../components/footer/footer\";\nimport SplashScreen from \"../../components/splashScreen/splashScreen\";\n\n\nfunction Profile() {\n\n    const {slug} = useParams();\n    const [profile, setProfile] = useState([]);\n    const [repositories, setRepositories] = useState([]);\n    const history = useHistory();\n\n    useEffect(()=>{\n        async function getData(){\n            const resp = await\n                axios.get(`https://api.github.com/users/${slug}`);\n            setProfile(resp.data);\n            const repos = await\n                axios.get(`https://api.github.com/users/${slug}/repos`);\n            setRepositories(repos.data);\n            history.push(`/profile/${slug}`);\n        }\n        getData();\n    },[slug]);\n\n    console.log(repositories);\n\n\n    let color;\n    function randomColor() {\n            //generate random color\n            let r, g, b;\n            //change bg color\n            r = Math.floor(Math.random() * 256);\n            g = Math.floor(Math.random() * 256);\n            b = Math.floor(Math.random() * 256);\n            return  color = `rgb(${r},${g},${b})`;\n    };\n    randomColor();\n    console.log(color)\n\n    return(\n\n\n        <>\n\n        <section className={'listOfCards'}>\n            <SplashScreen name={slug}/>\n            <div  className={'list'}>\n                <div className={'cards'}>\n                {\n                    repositories.map((project, i) =>{\n                        randomColor();\n                        return <Card\n                            key={i}\n                            img={``}\n                            projectName={project.name}\n                            projectDescription={'Add project description'}\n                            projectLink={project.homepage}\n                            GithubLink={project.html_url}\n                            bgColor={color}\n                        />\n                    })\n                }\n                <Card\n                    img={``}\n                    projectName={'prject title'}\n                    projectDescription={'Add project description'}\n                    projectLink={'website link'}\n                    GithubLink={'github link'}\n                    bgColor={randomColor()}\n\n                />\n                    <Card\n                        img={``}\n                        projectName={'prject title'}\n                        projectDescription={'Add project description'}\n                        projectLink={'website link'}\n                        GithubLink={'github link'}\n                        bgColor={randomColor()}\n\n                    />\n                    <Card\n                        img={``}\n                        projectName={'prject title'}\n                        projectDescription={'Add project description'}\n                        projectLink={'website link'}\n                        GithubLink={'github link'}\n                        bgColor={randomColor()}\n\n                    />\n                    <Card\n                        img={``}\n                        projectName={'prject title'}\n                        projectDescription={'Add project description'}\n                        projectLink={'website link'}\n                        GithubLink={'github link'}\n                        bgColor={randomColor()}\n\n                    />\n\n\n                </div>\n            </div>\n\n        </section>\n            <Footer/>\n        </>\n\n\n    );\n\n}\n\nexport default Profile;\n","/Users/imane/Desktop/GITHUB/workshop-react/src/pages/Homepage/homepage.js",[],"/Users/imane/Desktop/GITHUB/workshop-react/src/components/nav/subMenu.js",[],"/Users/imane/Desktop/GITHUB/workshop-react/src/components/cards/cards.js",[],"/Users/imane/Desktop/GITHUB/workshop-react/src/components/footer/footer.js",[],"/Users/imane/Desktop/GITHUB/workshop-react/src/components/splashScreen/splashScreen.js",["69"],"import React, {useRef} from 'react';\nimport {animated, useSpring} from \"react-spring\";\nimport \"./splashScreen.scss\";\n\nfunction SplashScreen  (props){\n\n    const textRef = useRef();\n\n    const textStyle = useSpring({\n        from:{\n            opacity: 0\n        },\n        to: {\n            opacity: 1\n        }\n    });\n\n    return(\n\n        <>\n            <section className={\"splashScreen\"}>\n            <animated.h1 style={textStyle}>{`Hi, I'm ${props.name}`}</animated.h1>\n            <animated.h2>I am a web developer</animated.h2>\n            </section>\n        </>\n    );\n}\n\nexport default SplashScreen;\n","/Users/imane/Desktop/GITHUB/workshop-react/src/components/header/header.js",[],"/Users/imane/Desktop/GITHUB/workshop-react/src/components/workshopContent/content.js",[],"/Users/imane/Desktop/GITHUB/workshop-react/src/components/formInput/formInput.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":13,"column":12,"nodeType":"76","messageId":"77","endLine":13,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":28,"column":7,"nodeType":"80","endLine":28,"endColumn":13,"suggestions":"81"},{"ruleId":"74","severity":1,"message":"82","line":7,"column":11,"nodeType":"76","messageId":"77","endLine":7,"endColumn":18},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'profile' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["85"],"'textRef' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [history, slug]",{"range":"88","text":"89"},[944,950],"[history, slug]"]